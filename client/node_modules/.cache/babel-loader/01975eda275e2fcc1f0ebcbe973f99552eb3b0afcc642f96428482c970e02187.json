{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nconst genBorderedStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    tableBorderColor,\n    tableHeaderBg,\n    tablePaddingVertical,\n    tablePaddingHorizontal,\n    calc\n  } = token;\n  const tableBorder = `${unit(lineWidth)} ${lineType} ${tableBorderColor}`;\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\n    [`&${componentCls}-${size}`]: {\n      [`> ${componentCls}-container`]: {\n        [`> ${componentCls}-content, > ${componentCls}-body`]: {\n          [`\n            > table > tbody > tr > th,\n            > table > tbody > tr > td\n          `]: {\n            [`> ${componentCls}-expanded-row-fixed`]: {\n              margin: `${unit(calc(paddingVertical).mul(-1).equal())}\n              ${unit(calc(calc(paddingHorizontal).add(lineWidth)).mul(-1).equal())}`\n            }\n          }\n        }\n      }\n    }\n  });\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}${componentCls}-bordered`]: Object.assign(Object.assign(Object.assign({\n        // ============================ Title =============================\n        [`> ${componentCls}-title`]: {\n          border: tableBorder,\n          borderBottom: 0\n        },\n        // ============================ Content ============================\n        [`> ${componentCls}-container`]: {\n          borderInlineStart: tableBorder,\n          borderTop: tableBorder,\n          [`\n            > ${componentCls}-content,\n            > ${componentCls}-header,\n            > ${componentCls}-body,\n            > ${componentCls}-summary\n          `]: {\n            '> table': {\n              // ============================= Cell =============================\n              [`\n                > thead > tr > th,\n                > thead > tr > td,\n                > tbody > tr > th,\n                > tbody > tr > td,\n                > tfoot > tr > th,\n                > tfoot > tr > td\n              `]: {\n                borderInlineEnd: tableBorder\n              },\n              // ============================ Header ============================\n              '> thead': {\n                '> tr:not(:last-child) > th': {\n                  borderBottom: tableBorder\n                },\n                '> tr > th::before': {\n                  backgroundColor: 'transparent !important'\n                }\n              },\n              // Fixed right should provides additional border\n              [`\n                > thead > tr,\n                > tbody > tr,\n                > tfoot > tr\n              `]: {\n                [`> ${componentCls}-cell-fix-right-first::after`]: {\n                  borderInlineEnd: tableBorder\n                }\n              },\n              // ========================== Expandable ==========================\n              [`\n                > tbody > tr > th,\n                > tbody > tr > td\n              `]: {\n                [`> ${componentCls}-expanded-row-fixed`]: {\n                  margin: `${unit(calc(tablePaddingVertical).mul(-1).equal())} ${unit(calc(calc(tablePaddingHorizontal).add(lineWidth)).mul(-1).equal())}`,\n                  '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    insetInlineEnd: lineWidth,\n                    bottom: 0,\n                    borderInlineEnd: tableBorder,\n                    content: '\"\"'\n                  }\n                }\n              }\n            }\n          }\n        },\n        // ============================ Scroll ============================\n        [`&${componentCls}-scroll-horizontal`]: {\n          [`> ${componentCls}-container > ${componentCls}-body`]: {\n            '> table > tbody': {\n              [`\n                > tr${componentCls}-expanded-row,\n                > tr${componentCls}-placeholder\n              `]: {\n                [`> th, > td`]: {\n                  borderInlineEnd: 0\n                }\n              }\n            }\n          }\n        }\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\n        // ============================ Footer ============================\n        [`> ${componentCls}-footer`]: {\n          border: tableBorder,\n          borderTop: 0\n        }\n      }),\n      // ============================ Nested ============================\n      [`${componentCls}-cell`]: {\n        [`${componentCls}-container:first-child`]: {\n          // :first-child to avoid the case when bordered and title is set\n          borderTop: 0\n        },\n        // https://github.com/ant-design/ant-design/issues/35577\n        '&-scrollbar:not([rowspan])': {\n          boxShadow: `0 ${unit(lineWidth)} 0 ${unit(lineWidth)} ${tableHeaderBg}`\n        }\n      },\n      [`${componentCls}-bordered ${componentCls}-cell-scrollbar`]: {\n        borderInlineEnd: tableBorder\n      }\n    }\n  };\n};\nexport default genBorderedStyle;","map":{"version":3,"names":["unit","genBorderedStyle","token","componentCls","lineWidth","lineType","tableBorderColor","tableHeaderBg","tablePaddingVertical","tablePaddingHorizontal","calc","tableBorder","getSizeBorderStyle","size","paddingVertical","paddingHorizontal","margin","mul","equal","add","Object","assign","border","borderBottom","borderInlineStart","borderTop","borderInlineEnd","backgroundColor","position","top","insetInlineEnd","bottom","content","tablePaddingVerticalMiddle","tablePaddingHorizontalMiddle","tablePaddingVerticalSmall","tablePaddingHorizontalSmall","boxShadow"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/node_modules/antd/es/table/style/bordered.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\r\nconst genBorderedStyle = token => {\r\n  const {\r\n    componentCls,\r\n    lineWidth,\r\n    lineType,\r\n    tableBorderColor,\r\n    tableHeaderBg,\r\n    tablePaddingVertical,\r\n    tablePaddingHorizontal,\r\n    calc\r\n  } = token;\r\n  const tableBorder = `${unit(lineWidth)} ${lineType} ${tableBorderColor}`;\r\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\r\n    [`&${componentCls}-${size}`]: {\r\n      [`> ${componentCls}-container`]: {\r\n        [`> ${componentCls}-content, > ${componentCls}-body`]: {\r\n          [`\r\n            > table > tbody > tr > th,\r\n            > table > tbody > tr > td\r\n          `]: {\r\n            [`> ${componentCls}-expanded-row-fixed`]: {\r\n              margin: `${unit(calc(paddingVertical).mul(-1).equal())}\r\n              ${unit(calc(calc(paddingHorizontal).add(lineWidth)).mul(-1).equal())}`\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    [`${componentCls}-wrapper`]: {\r\n      [`${componentCls}${componentCls}-bordered`]: Object.assign(Object.assign(Object.assign({\r\n        // ============================ Title =============================\r\n        [`> ${componentCls}-title`]: {\r\n          border: tableBorder,\r\n          borderBottom: 0\r\n        },\r\n        // ============================ Content ============================\r\n        [`> ${componentCls}-container`]: {\r\n          borderInlineStart: tableBorder,\r\n          borderTop: tableBorder,\r\n          [`\r\n            > ${componentCls}-content,\r\n            > ${componentCls}-header,\r\n            > ${componentCls}-body,\r\n            > ${componentCls}-summary\r\n          `]: {\r\n            '> table': {\r\n              // ============================= Cell =============================\r\n              [`\r\n                > thead > tr > th,\r\n                > thead > tr > td,\r\n                > tbody > tr > th,\r\n                > tbody > tr > td,\r\n                > tfoot > tr > th,\r\n                > tfoot > tr > td\r\n              `]: {\r\n                borderInlineEnd: tableBorder\r\n              },\r\n              // ============================ Header ============================\r\n              '> thead': {\r\n                '> tr:not(:last-child) > th': {\r\n                  borderBottom: tableBorder\r\n                },\r\n                '> tr > th::before': {\r\n                  backgroundColor: 'transparent !important'\r\n                }\r\n              },\r\n              // Fixed right should provides additional border\r\n              [`\r\n                > thead > tr,\r\n                > tbody > tr,\r\n                > tfoot > tr\r\n              `]: {\r\n                [`> ${componentCls}-cell-fix-right-first::after`]: {\r\n                  borderInlineEnd: tableBorder\r\n                }\r\n              },\r\n              // ========================== Expandable ==========================\r\n              [`\r\n                > tbody > tr > th,\r\n                > tbody > tr > td\r\n              `]: {\r\n                [`> ${componentCls}-expanded-row-fixed`]: {\r\n                  margin: `${unit(calc(tablePaddingVertical).mul(-1).equal())} ${unit(calc(calc(tablePaddingHorizontal).add(lineWidth)).mul(-1).equal())}`,\r\n                  '&::after': {\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    insetInlineEnd: lineWidth,\r\n                    bottom: 0,\r\n                    borderInlineEnd: tableBorder,\r\n                    content: '\"\"'\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        // ============================ Scroll ============================\r\n        [`&${componentCls}-scroll-horizontal`]: {\r\n          [`> ${componentCls}-container > ${componentCls}-body`]: {\r\n            '> table > tbody': {\r\n              [`\r\n                > tr${componentCls}-expanded-row,\r\n                > tr${componentCls}-placeholder\r\n              `]: {\r\n                [`> th, > td`]: {\r\n                  borderInlineEnd: 0\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\r\n        // ============================ Footer ============================\r\n        [`> ${componentCls}-footer`]: {\r\n          border: tableBorder,\r\n          borderTop: 0\r\n        }\r\n      }),\r\n      // ============================ Nested ============================\r\n      [`${componentCls}-cell`]: {\r\n        [`${componentCls}-container:first-child`]: {\r\n          // :first-child to avoid the case when bordered and title is set\r\n          borderTop: 0\r\n        },\r\n        // https://github.com/ant-design/ant-design/issues/35577\r\n        '&-scrollbar:not([rowspan])': {\r\n          boxShadow: `0 ${unit(lineWidth)} 0 ${unit(lineWidth)} ${tableHeaderBg}`\r\n        }\r\n      },\r\n      [`${componentCls}-bordered ${componentCls}-cell-scrollbar`]: {\r\n        borderInlineEnd: tableBorder\r\n      }\r\n    }\r\n  };\r\n};\r\nexport default genBorderedStyle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}