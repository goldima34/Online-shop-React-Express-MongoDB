{"ast":null,"code":"// Style as confirm component\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { clearFix } from '../../style';\nimport { genSubStyleComponent } from '../../theme/internal';\n// ============================= Confirm ==============================\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS,\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n});","map":{"version":3,"names":["unit","prepareComponentToken","prepareToken","clearFix","genSubStyleComponent","genModalConfirmStyle","token","componentCls","titleFontSize","titleLineHeight","modalConfirmIconSize","fontSize","lineHeight","modalTitleHeight","fontHeight","confirmBodyPadding","confirmComponentCls","direction","antCls","display","Object","assign","padding","flexWrap","alignItems","iconCls","flex","marginInlineEnd","confirmIconMarginInlineEnd","marginTop","calc","sub","equal","div","flexDirection","rowGap","marginXS","maxWidth","add","marginSM","color","colorTextHeading","fontWeight","fontWeightStrong","colorText","textAlign","confirmBtnsMarginTop","marginBottom","marginInlineStart","colorError","colorWarning","colorInfo","colorSuccess","modalToken","order"],"sources":["C:/Users/Admin/git/react-node-app/client/node_modules/antd/es/modal/style/confirm.js"],"sourcesContent":["// Style as confirm component\r\nimport { unit } from '@ant-design/cssinjs';\r\nimport { prepareComponentToken, prepareToken } from '.';\r\nimport { clearFix } from '../../style';\r\nimport { genSubStyleComponent } from '../../theme/internal';\r\n// ============================= Confirm ==============================\r\nconst genModalConfirmStyle = token => {\r\n  const {\r\n    componentCls,\r\n    titleFontSize,\r\n    titleLineHeight,\r\n    modalConfirmIconSize,\r\n    fontSize,\r\n    lineHeight,\r\n    modalTitleHeight,\r\n    fontHeight,\r\n    confirmBodyPadding\r\n  } = token;\r\n  const confirmComponentCls = `${componentCls}-confirm`;\r\n  return {\r\n    [confirmComponentCls]: {\r\n      '&-rtl': {\r\n        direction: 'rtl'\r\n      },\r\n      [`${token.antCls}-modal-header`]: {\r\n        display: 'none'\r\n      },\r\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\r\n      [`&${componentCls} ${componentCls}-body`]: {\r\n        padding: confirmBodyPadding\r\n      },\r\n      // ====================== Body ======================\r\n      [`${confirmComponentCls}-body`]: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'start',\r\n        [`> ${token.iconCls}`]: {\r\n          flex: 'none',\r\n          fontSize: modalConfirmIconSize,\r\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\r\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\r\n        },\r\n        [`&-has-title > ${token.iconCls}`]: {\r\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\r\n        }\r\n      },\r\n      [`${confirmComponentCls}-paragraph`]: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 'auto',\r\n        rowGap: token.marginXS,\r\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\r\n      },\r\n      [`${confirmComponentCls}-title`]: {\r\n        color: token.colorTextHeading,\r\n        fontWeight: token.fontWeightStrong,\r\n        fontSize: titleFontSize,\r\n        lineHeight: titleLineHeight\r\n      },\r\n      [`${confirmComponentCls}-content`]: {\r\n        color: token.colorText,\r\n        fontSize,\r\n        lineHeight\r\n      },\r\n      // ===================== Footer =====================\r\n      [`${confirmComponentCls}-btns`]: {\r\n        textAlign: 'end',\r\n        marginTop: token.confirmBtnsMarginTop,\r\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\r\n          marginBottom: 0,\r\n          marginInlineStart: token.marginXS\r\n        }\r\n      }\r\n    },\r\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\r\n      color: token.colorError\r\n    },\r\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\r\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\r\n      color: token.colorWarning\r\n    },\r\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\r\n      color: token.colorInfo\r\n    },\r\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\r\n      color: token.colorSuccess\r\n    }\r\n  };\r\n};\r\n// ============================== Export ==============================\r\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\r\n  const modalToken = prepareToken(token);\r\n  return [genModalConfirmStyle(modalToken)];\r\n}, prepareComponentToken, {\r\n  // confirm is weak than modal since no conflict here\r\n  order: -1000\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}