{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${unit(lineWidth)} ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: groupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);","map":{"version":3,"names":["unit","resetComponent","genStyleHooks","mergeToken","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","margin","Object","assign","position","display","justifyContent","alignItems","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","prepareComponentToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round","colorTextLightSolid","colorTextPlaceholder","avatarToken"],"sources":["C:/Users/Admin/git/react-node-app/client/node_modules/antd/es/avatar/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\r\nimport { resetComponent } from '../../style';\r\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\r\nconst genBaseStyle = token => {\r\n  const {\r\n    antCls,\r\n    componentCls,\r\n    iconCls,\r\n    avatarBg,\r\n    avatarColor,\r\n    containerSize,\r\n    containerSizeLG,\r\n    containerSizeSM,\r\n    textFontSize,\r\n    textFontSizeLG,\r\n    textFontSizeSM,\r\n    borderRadius,\r\n    borderRadiusLG,\r\n    borderRadiusSM,\r\n    lineWidth,\r\n    lineType\r\n  } = token;\r\n  // Avatar size style\r\n  const avatarSizeStyle = (size, fontSize, radius) => ({\r\n    width: size,\r\n    height: size,\r\n    borderRadius: '50%',\r\n    [`&${componentCls}-square`]: {\r\n      borderRadius: radius\r\n    },\r\n    [`&${componentCls}-icon`]: {\r\n      fontSize,\r\n      [`> ${iconCls}`]: {\r\n        margin: 0\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\r\n      position: 'relative',\r\n      display: 'inline-flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      overflow: 'hidden',\r\n      color: avatarColor,\r\n      whiteSpace: 'nowrap',\r\n      textAlign: 'center',\r\n      verticalAlign: 'middle',\r\n      background: avatarBg,\r\n      border: `${unit(lineWidth)} ${lineType} transparent`,\r\n      [`&-image`]: {\r\n        background: 'transparent'\r\n      },\r\n      [`${antCls}-image-img`]: {\r\n        display: 'block'\r\n      }\r\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\r\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\r\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\r\n      '> img': {\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        objectFit: 'cover'\r\n      }\r\n    })\r\n  };\r\n};\r\nconst genGroupStyle = token => {\r\n  const {\r\n    componentCls,\r\n    groupBorderColor,\r\n    groupOverlapping,\r\n    groupSpace\r\n  } = token;\r\n  return {\r\n    [`${componentCls}-group`]: {\r\n      display: 'inline-flex',\r\n      [`${componentCls}`]: {\r\n        borderColor: groupBorderColor\r\n      },\r\n      [`> *:not(:first-child)`]: {\r\n        marginInlineStart: groupOverlapping\r\n      }\r\n    },\r\n    [`${componentCls}-group-popover`]: {\r\n      [`${componentCls} + ${componentCls}`]: {\r\n        marginInlineStart: groupSpace\r\n      }\r\n    }\r\n  };\r\n};\r\nexport const prepareComponentToken = token => {\r\n  const {\r\n    controlHeight,\r\n    controlHeightLG,\r\n    controlHeightSM,\r\n    fontSize,\r\n    fontSizeLG,\r\n    fontSizeXL,\r\n    fontSizeHeading3,\r\n    marginXS,\r\n    marginXXS,\r\n    colorBorderBg\r\n  } = token;\r\n  return {\r\n    containerSize: controlHeight,\r\n    containerSizeLG: controlHeightLG,\r\n    containerSizeSM: controlHeightSM,\r\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\r\n    textFontSizeLG: fontSizeHeading3,\r\n    textFontSizeSM: fontSize,\r\n    groupSpace: marginXXS,\r\n    groupOverlapping: -marginXS,\r\n    groupBorderColor: colorBorderBg\r\n  };\r\n};\r\nexport default genStyleHooks('Avatar', token => {\r\n  const {\r\n    colorTextLightSolid,\r\n    colorTextPlaceholder\r\n  } = token;\r\n  const avatarToken = mergeToken(token, {\r\n    avatarBg: colorTextPlaceholder,\r\n    avatarColor: colorTextLightSolid\r\n  });\r\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\r\n}, prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}