{"ast":null,"code":"import $api from './index';\nexport const createProduct = async product => {\n  await $api.post('product/', product);\n};\nexport const fetchProduct = async (page, limit) => {\n  const {\n    data\n  } = await $api.get('product/', {\n    params: {\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchProductByCategory = async category => {\n  try {\n    const {\n      data\n    } = await $api.get('product/', {\n      params: {\n        category\n      }\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchOneProduct = async id => {\n  const {\n    data\n  } = await $api.get('product/' + id);\n  return data;\n};\nexport const createCategory = async category => {\n  const {\n    data\n  } = await $api.post('/category', category);\n  console.log(data);\n  return data;\n};\nexport const fetchCategories = async (page, limit) => {\n  const {\n    data\n  } = await $api.get('category/', {\n    params: {\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const getCategories = async () => {\n  const {\n    data\n  } = await $api.get('category/all');\n  return data;\n};","map":{"version":3,"names":["$api","createProduct","product","post","fetchProduct","page","limit","data","get","params","fetchProductByCategory","category","error","console","log","fetchOneProduct","id","createCategory","fetchCategories","getCategories"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/src/api/ItemApi.js"],"sourcesContent":["import $api from './index'\r\n\r\nexport const createProduct = async (product) => {\r\n  await $api.post('product/', product)\r\n}\r\n\r\nexport const fetchProduct = async (page, limit) => {\r\n  const { data } = await $api.get('product/', {\r\n    params: {\r\n      page,\r\n      limit,\r\n    },\r\n  })\r\n  return data\r\n}\r\n\r\nexport const fetchProductByCategory = async (category) => {\r\n  try {\r\n    const { data } = await $api.get('product/', {\r\n      params: {\r\n        category\r\n      },\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchOneProduct = async (id) => {\r\n  const { data } = await $api.get('product/' + id)\r\n  return data\r\n}\r\n\r\nexport const createCategory = async (category) => {\r\n  const { data } = await $api.post('/category', category)\r\n  console.log(data)\r\n  return data\r\n}\r\n\r\nexport const fetchCategories = async (page, limit) => {\r\n  const { data } = await $api.get('category/', {\r\n    params: {\r\n      page,\r\n      limit,\r\n    },\r\n  })\r\n  return data\r\n}\r\n\r\nexport const getCategories = async () => {\r\n  const { data } = await $api.get('category/all')\r\n  return data\r\n}\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,MAAMF,IAAI,CAACG,IAAI,CAAC,UAAU,EAAED,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EACjD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,UAAU,EAAE;IAC1CC,MAAM,EAAE;MACNJ,IAAI;MACJC;IACF;EACF,CAAC,CAAC;EACF,OAAOC,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,sBAAsB,GAAG,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACF,MAAM;MAAEJ;IAAK,CAAC,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,UAAU,EAAE;MAC1CC,MAAM,EAAE;QACNE;MACF;IACF,CAAC,CAAC;IACF,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,MAAM;IAAET;EAAK,CAAC,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,UAAU,GAAGQ,EAAE,CAAC;EAChD,OAAOT,IAAI;AACb,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAON,QAAQ,IAAK;EAChD,MAAM;IAAEJ;EAAK,CAAC,GAAG,MAAMP,IAAI,CAACG,IAAI,CAAC,WAAW,EAAEQ,QAAQ,CAAC;EACvDE,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACjB,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMW,eAAe,GAAG,MAAAA,CAAOb,IAAI,EAAEC,KAAK,KAAK;EACpD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,WAAW,EAAE;IAC3CC,MAAM,EAAE;MACNJ,IAAI;MACJC;IACF;EACF,CAAC,CAAC;EACF,OAAOC,IAAI;AACb,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAM;IAAEZ;EAAK,CAAC,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,cAAc,CAAC;EAC/C,OAAOD,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}