{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CascaderContext from \"../context\";\n\n/**\r\n * Control the active open options path.\r\n */\nexport default (function (multiple, open) {\n  var _React$useContext = React.useContext(CascaderContext),\n    values = _React$useContext.values;\n  var firstValueCells = values[0];\n\n  // Record current dropdown active options\n  // This also control the open status\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeValueCells = _React$useState2[0],\n    setActiveValueCells = _React$useState2[1];\n  React.useEffect(function () {\n    if (open && !multiple) {\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [open, firstValueCells]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n  return [activeValueCells, setActiveValueCells];\n});","map":{"version":3,"names":["_slicedToArray","React","CascaderContext","multiple","open","_React$useContext","useContext","values","firstValueCells","_React$useState","useState","_React$useState2","activeValueCells","setActiveValueCells","useEffect"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/node_modules/rc-cascader/es/OptionList/useActive.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport * as React from 'react';\r\nimport CascaderContext from \"../context\";\r\n\r\n/**\r\n * Control the active open options path.\r\n */\r\nexport default (function (multiple, open) {\r\n  var _React$useContext = React.useContext(CascaderContext),\r\n    values = _React$useContext.values;\r\n  var firstValueCells = values[0];\r\n\r\n  // Record current dropdown active options\r\n  // This also control the open status\r\n  var _React$useState = React.useState([]),\r\n    _React$useState2 = _slicedToArray(_React$useState, 2),\r\n    activeValueCells = _React$useState2[0],\r\n    setActiveValueCells = _React$useState2[1];\r\n  React.useEffect(function () {\r\n    if (open && !multiple) {\r\n      setActiveValueCells(firstValueCells || []);\r\n    }\r\n  }, /* eslint-disable react-hooks/exhaustive-deps */\r\n  [open, firstValueCells]\r\n  /* eslint-enable react-hooks/exhaustive-deps */);\r\n\r\n  return [activeValueCells, setActiveValueCells];\r\n});"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,eAAe,MAAM,YAAY;;AAExC;AACA;AACA;AACA,gBAAgB,UAAUC,QAAQ,EAAEC,IAAI,EAAE;EACxC,IAAIC,iBAAiB,GAAGJ,KAAK,CAACK,UAAU,CAACJ,eAAe,CAAC;IACvDK,MAAM,GAAGF,iBAAiB,CAACE,MAAM;EACnC,IAAIC,eAAe,GAAGD,MAAM,CAAC,CAAC,CAAC;;EAE/B;EACA;EACA,IAAIE,eAAe,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;IACtCC,gBAAgB,GAAGX,cAAc,CAACS,eAAe,EAAE,CAAC,CAAC;IACrDG,gBAAgB,GAAGD,gBAAgB,CAAC,CAAC,CAAC;IACtCE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAC,CAAC;EAC3CV,KAAK,CAACa,SAAS,CAAC,YAAY;IAC1B,IAAIV,IAAI,IAAI,CAACD,QAAQ,EAAE;MACrBU,mBAAmB,CAACL,eAAe,IAAI,EAAE,CAAC;IAC5C;EACF,CAAC,EAAE;EACH,CAACJ,IAAI,EAAEI,eAAe;EACtB,+CAA+C,CAAC;EAEhD,OAAO,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}