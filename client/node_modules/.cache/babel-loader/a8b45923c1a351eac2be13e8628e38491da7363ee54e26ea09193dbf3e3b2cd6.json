{"ast":null,"code":"import $api from \"./index\";\nexport const getBasket = async userId => {\n  const {\n    data\n  } = await $api.get(\"basket/\" + userId);\n  return data;\n};\nexport const deleteFromBasket = async (userId, itemId) => {\n  const {\n    data\n  } = await $api.delete(`basket/${userId}/${itemId}`);\n  return data;\n};\nexport const clearBasket = async userId => {\n  const {\n    data\n  } = await $api.delete(`basket/${userId}`);\n  return data;\n};\nexport const increaseCount = async (userId, basketItemId) => {\n  try {\n    const {\n      data\n    } = await $api.put(`basket/increase/${userId}/${basketItemId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw new Error(\"Error increasing count\");\n  }\n};\nexport const decreaseCount = async (userId, basketItemId) => {\n  try {\n    const {\n      data\n    } = await $api.put(`basket/decrease/${userId}/${basketItemId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw new Error(\"Error decreasing count\");\n  }\n};\nexport const additemToBasket = async (userId, itemId, amount) => {\n  const {\n    data\n  } = await $api.post(\"basket/\" + userId, {\n    itemId,\n    amount\n  });\n  return data;\n};\nexport const increaseBasketItem = () => {\n  setCountState(countState + 1);\n  setTotal(element.item.price * (countState + 1));\n  increaseCount(userId, element._id);\n};\nexport const decreaseBasketItem = () => {\n  if (countState > 1) {\n    setCountState(countState => countState - 1);\n    setTotal(element.item.price * (countState - 1));\n    decreaseCount(userId, element._id);\n  } else {\n    setCountState(1);\n    setTotal(element.item.price);\n  }\n};","map":{"version":3,"names":["$api","getBasket","userId","data","get","deleteFromBasket","itemId","delete","clearBasket","increaseCount","basketItemId","put","console","log","error","Error","decreaseCount","additemToBasket","amount","post","increaseBasketItem","setCountState","countState","setTotal","element","item","price","_id","decreaseBasketItem"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/src/api/BasketApi.js"],"sourcesContent":["import $api from \"./index\";\r\n\r\nexport const getBasket = async (userId) => {\r\n  const { data } = await $api.get(\"basket/\" + userId);\r\n  return data;\r\n};\r\n\r\nexport const deleteFromBasket = async (userId, itemId) => {\r\n  const { data } = await $api.delete(`basket/${userId}/${itemId}`);\r\n  return data;\r\n};\r\n\r\nexport const clearBasket = async (userId) => {\r\n  const { data } = await $api.delete(`basket/${userId}`);\r\n  return data;\r\n};\r\n\r\nexport const increaseCount = async (userId, basketItemId) => {\r\n  try {\r\n    const { data } = await $api.put(\r\n      `basket/increase/${userId}/${basketItemId}`\r\n    );\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw new Error(\"Error increasing count\");\r\n  }\r\n};\r\n\r\nexport const decreaseCount = async (userId, basketItemId) => {\r\n  try {\r\n    const { data } = await $api.put(\r\n      `basket/decrease/${userId}/${basketItemId}`\r\n    );\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw new Error(\"Error decreasing count\");\r\n  }\r\n};\r\n\r\nexport const additemToBasket = async (userId, itemId, amount) => {\r\n  const { data } = await $api.post(\"basket/\" + userId, {\r\n    itemId,\r\n    amount,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const increaseBasketItem = () => {\r\n  setCountState(countState + 1);\r\n  setTotal(element.item.price * (countState + 1));\r\n  increaseCount(userId, element._id);\r\n};\r\n\r\nexport const decreaseBasketItem = () => {\r\n  if (countState > 1) {\r\n    setCountState((countState) => countState - 1);\r\n    setTotal(element.item.price * (countState - 1));\r\n    decreaseCount(userId, element._id);\r\n  } else {\r\n    setCountState(1);\r\n    setTotal(element.item.price);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;EACzC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAC,SAAS,GAAGF,MAAM,CAAC;EACnD,OAAOC,IAAI;AACb,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAOH,MAAM,EAAEI,MAAM,KAAK;EACxD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACO,MAAM,CAAE,UAASL,MAAO,IAAGI,MAAO,EAAC,CAAC;EAChE,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,WAAW,GAAG,MAAON,MAAM,IAAK;EAC3C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACO,MAAM,CAAE,UAASL,MAAO,EAAC,CAAC;EACtD,OAAOC,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOP,MAAM,EAAEQ,YAAY,KAAK;EAC3D,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACW,GAAG,CAC5B,mBAAkBT,MAAO,IAAGQ,YAAa,EAC5C,CAAC;IACDE,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOd,MAAM,EAAEQ,YAAY,KAAK;EAC3D,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACW,GAAG,CAC5B,mBAAkBT,MAAO,IAAGQ,YAAa,EAC5C,CAAC;IACDE,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAOf,MAAM,EAAEI,MAAM,EAAEY,MAAM,KAAK;EAC/D,MAAM;IAAEf;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACmB,IAAI,CAAC,SAAS,GAAGjB,MAAM,EAAE;IACnDI,MAAM;IACNY;EACF,CAAC,CAAC;EACF,OAAOf,IAAI;AACb,CAAC;AAED,OAAO,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;EACtCC,aAAa,CAACC,UAAU,GAAG,CAAC,CAAC;EAC7BC,QAAQ,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,IAAIJ,UAAU,GAAG,CAAC,CAAC,CAAC;EAC/Cb,aAAa,CAACP,MAAM,EAAEsB,OAAO,CAACG,GAAG,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,IAAIN,UAAU,GAAG,CAAC,EAAE;IAClBD,aAAa,CAAEC,UAAU,IAAKA,UAAU,GAAG,CAAC,CAAC;IAC7CC,QAAQ,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,IAAIJ,UAAU,GAAG,CAAC,CAAC,CAAC;IAC/CN,aAAa,CAACd,MAAM,EAAEsB,OAAO,CAACG,GAAG,CAAC;EACpC,CAAC,MAAM;IACLN,aAAa,CAAC,CAAC,CAAC;IAChBE,QAAQ,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}