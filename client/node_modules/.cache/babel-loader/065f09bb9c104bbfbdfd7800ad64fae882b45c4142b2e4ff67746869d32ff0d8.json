{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nimport { useToken } from '../theme/internal';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const [, token] = useToken();\n  const itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  const renderSwitcherIcon = nodeProps => ( /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  }));\n  return wrapCSSVar( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: itemHeight,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\nexport default Tree;","map":{"version":3,"names":["React","HolderOutlined","classNames","RcTree","initCollapseMotion","ConfigContext","useStyle","dropIndicatorRender","SwitcherIconCom","useToken","Tree","forwardRef","props","ref","_a","getPrefixCls","direction","virtual","tree","useContext","prefixCls","customizePrefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","selectable","draggable","motion","customMotion","style","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapCSSVar","hashId","cssVarCls","token","itemHeight","paddingXS","titleHeight","controlHeightSM","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","renderSwitcherIcon","nodeProps","treeNodeProps","process","env","NODE_ENV","displayName"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/node_modules/antd/es/tree/Tree.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\r\nimport classNames from 'classnames';\r\nimport RcTree from 'rc-tree';\r\nimport initCollapseMotion from '../_util/motion';\r\nimport { ConfigContext } from '../config-provider';\r\nimport useStyle from './style';\r\nimport dropIndicatorRender from './utils/dropIndicator';\r\nimport SwitcherIconCom from './utils/iconUtil';\r\nimport { useToken } from '../theme/internal';\r\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  var _a;\r\n  const {\r\n    getPrefixCls,\r\n    direction,\r\n    virtual,\r\n    tree\r\n  } = React.useContext(ConfigContext);\r\n  const {\r\n    prefixCls: customizePrefixCls,\r\n    className,\r\n    showIcon = false,\r\n    showLine,\r\n    switcherIcon,\r\n    blockNode = false,\r\n    children,\r\n    checkable = false,\r\n    selectable = true,\r\n    draggable,\r\n    motion: customMotion,\r\n    style\r\n  } = props;\r\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\r\n  const rootPrefixCls = getPrefixCls();\r\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\r\n    motionAppear: false\r\n  });\r\n  const newProps = Object.assign(Object.assign({}, props), {\r\n    checkable,\r\n    selectable,\r\n    showIcon,\r\n    motion,\r\n    blockNode,\r\n    showLine: Boolean(showLine),\r\n    dropIndicatorRender\r\n  });\r\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\r\n  const [, token] = useToken();\r\n  const itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\r\n  const draggableConfig = React.useMemo(() => {\r\n    if (!draggable) {\r\n      return false;\r\n    }\r\n    let mergedDraggable = {};\r\n    switch (typeof draggable) {\r\n      case 'function':\r\n        mergedDraggable.nodeDraggable = draggable;\r\n        break;\r\n      case 'object':\r\n        mergedDraggable = Object.assign({}, draggable);\r\n        break;\r\n      default:\r\n        break;\r\n      // Do nothing\r\n    }\r\n    if (mergedDraggable.icon !== false) {\r\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\r\n    }\r\n    return mergedDraggable;\r\n  }, [draggable]);\r\n  const renderSwitcherIcon = nodeProps => ( /*#__PURE__*/React.createElement(SwitcherIconCom, {\r\n    prefixCls: prefixCls,\r\n    switcherIcon: switcherIcon,\r\n    treeNodeProps: nodeProps,\r\n    showLine: showLine\r\n  }));\r\n  return wrapCSSVar( /*#__PURE__*/React.createElement(RcTree, Object.assign({\r\n    itemHeight: itemHeight,\r\n    ref: ref,\r\n    virtual: virtual\r\n  }, newProps, {\r\n    // newProps may contain style so declare style below it\r\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\r\n    prefixCls: prefixCls,\r\n    className: classNames({\r\n      [`${prefixCls}-icon-hide`]: !showIcon,\r\n      [`${prefixCls}-block-node`]: blockNode,\r\n      [`${prefixCls}-unselectable`]: !selectable,\r\n      [`${prefixCls}-rtl`]: direction === 'rtl'\r\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\r\n    direction: direction,\r\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\r\n      className: `${prefixCls}-checkbox-inner`\r\n    }) : checkable,\r\n    selectable: selectable,\r\n    switcherIcon: renderSwitcherIcon,\r\n    draggable: draggableConfig\r\n  }), children));\r\n});\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Tree.displayName = 'Tree';\r\n}\r\nexport default Tree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}