{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    skeleton\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\n    return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return children !== null && children !== void 0 ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","map":{"version":3,"names":["classNames","React","ConfigContext","SkeletonAvatar","SkeletonButton","Element","SkeletonImage","SkeletonInput","SkeletonNode","Paragraph","Title","useStyle","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","prefixCls","customizePrefixCls","loading","className","rootClassName","style","children","avatar","title","paragraph","active","round","getPrefixCls","direction","skeleton","useContext","wrapCSSVar","hashId","cssVarCls","avatarNode","avatarProps","Object","assign","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","Button","Avatar","Input","Image","Node","process","env","NODE_ENV","displayName"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/node_modules/antd/es/skeleton/Skeleton.js"],"sourcesContent":["\"use client\";\r\n\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { ConfigContext } from '../config-provider';\r\nimport SkeletonAvatar from './Avatar';\r\nimport SkeletonButton from './Button';\r\nimport Element from './Element';\r\nimport SkeletonImage from './Image';\r\nimport SkeletonInput from './Input';\r\nimport SkeletonNode from './Node';\r\nimport Paragraph from './Paragraph';\r\nimport Title from './Title';\r\nimport useStyle from './style';\r\nfunction getComponentProps(prop) {\r\n  if (prop && typeof prop === 'object') {\r\n    return prop;\r\n  }\r\n  return {};\r\n}\r\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\r\n  if (hasTitle && !hasParagraph) {\r\n    // Square avatar\r\n    return {\r\n      size: 'large',\r\n      shape: 'square'\r\n    };\r\n  }\r\n  return {\r\n    size: 'large',\r\n    shape: 'circle'\r\n  };\r\n}\r\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\r\n  if (!hasAvatar && hasParagraph) {\r\n    return {\r\n      width: '38%'\r\n    };\r\n  }\r\n  if (hasAvatar && hasParagraph) {\r\n    return {\r\n      width: '50%'\r\n    };\r\n  }\r\n  return {};\r\n}\r\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\r\n  const basicProps = {};\r\n  // Width\r\n  if (!hasAvatar || !hasTitle) {\r\n    basicProps.width = '61%';\r\n  }\r\n  // Rows\r\n  if (!hasAvatar && hasTitle) {\r\n    basicProps.rows = 3;\r\n  } else {\r\n    basicProps.rows = 2;\r\n  }\r\n  return basicProps;\r\n}\r\nconst Skeleton = props => {\r\n  const {\r\n    prefixCls: customizePrefixCls,\r\n    loading,\r\n    className,\r\n    rootClassName,\r\n    style,\r\n    children,\r\n    avatar = false,\r\n    title = true,\r\n    paragraph = true,\r\n    active,\r\n    round\r\n  } = props;\r\n  const {\r\n    getPrefixCls,\r\n    direction,\r\n    skeleton\r\n  } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\r\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\r\n  if (loading || !('loading' in props)) {\r\n    const hasAvatar = !!avatar;\r\n    const hasTitle = !!title;\r\n    const hasParagraph = !!paragraph;\r\n    // Avatar\r\n    let avatarNode;\r\n    if (hasAvatar) {\r\n      const avatarProps = Object.assign(Object.assign({\r\n        prefixCls: `${prefixCls}-avatar`\r\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\r\n      // We direct use SkeletonElement as avatar in skeleton internal.\r\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\r\n        className: `${prefixCls}-header`\r\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\r\n    }\r\n    let contentNode;\r\n    if (hasTitle || hasParagraph) {\r\n      // Title\r\n      let $title;\r\n      if (hasTitle) {\r\n        const titleProps = Object.assign(Object.assign({\r\n          prefixCls: `${prefixCls}-title`\r\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\r\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\r\n      }\r\n      // Paragraph\r\n      let paragraphNode;\r\n      if (hasParagraph) {\r\n        const paragraphProps = Object.assign(Object.assign({\r\n          prefixCls: `${prefixCls}-paragraph`\r\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\r\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\r\n      }\r\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\r\n        className: `${prefixCls}-content`\r\n      }, $title, paragraphNode);\r\n    }\r\n    const cls = classNames(prefixCls, {\r\n      [`${prefixCls}-with-avatar`]: hasAvatar,\r\n      [`${prefixCls}-active`]: active,\r\n      [`${prefixCls}-rtl`]: direction === 'rtl',\r\n      [`${prefixCls}-round`]: round\r\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\r\n    return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\r\n      className: cls,\r\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\r\n    }, avatarNode, contentNode));\r\n  }\r\n  return children !== null && children !== void 0 ? children : null;\r\n};\r\nSkeleton.Button = SkeletonButton;\r\nSkeleton.Avatar = SkeletonAvatar;\r\nSkeleton.Input = SkeletonInput;\r\nSkeleton.Image = SkeletonImage;\r\nSkeleton.Node = SkeletonNode;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Skeleton.displayName = 'Skeleton';\r\n}\r\nexport default Skeleton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}