{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport classNames from 'classnames';\nimport TransButton from '../../_util/transButton';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nexport default function CopyBtn(props) {\n  const {\n    prefixCls,\n    copied,\n    locale = {},\n    onCopy,\n    iconOnly,\n    tooltips,\n    icon\n  } = props;\n  const tooltipNodes = toList(tooltips);\n  const iconNodes = toList(icon);\n  const {\n    copied: copiedText,\n    copy: copyText\n  } = locale;\n  const copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\n  const systemStr = copied ? copiedText : copyText;\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"copy\",\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(TransButton, {\n    className: classNames(`${prefixCls}-copy`, {\n      [`${prefixCls}-copy-success`]: copied,\n      [`${prefixCls}-copy-icon-only`]: iconOnly\n    }),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n}","map":{"version":3,"names":["React","CheckOutlined","CopyOutlined","classNames","TransButton","Tooltip","getNode","toList","CopyBtn","props","prefixCls","copied","locale","onCopy","iconOnly","tooltips","icon","tooltipNodes","iconNodes","copiedText","copy","copyText","copyTitle","systemStr","ariaLabel","createElement","key","title","className","onClick"],"sources":["C:/Users/Admin/git/react-node-app/client/node_modules/antd/es/typography/Base/CopyBtn.js"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from 'react';\r\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\r\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\r\nimport classNames from 'classnames';\r\nimport TransButton from '../../_util/transButton';\r\nimport Tooltip from '../../tooltip';\r\nimport { getNode, toList } from './util';\r\nexport default function CopyBtn(props) {\r\n  const {\r\n    prefixCls,\r\n    copied,\r\n    locale = {},\r\n    onCopy,\r\n    iconOnly,\r\n    tooltips,\r\n    icon\r\n  } = props;\r\n  const tooltipNodes = toList(tooltips);\r\n  const iconNodes = toList(icon);\r\n  const {\r\n    copied: copiedText,\r\n    copy: copyText\r\n  } = locale;\r\n  const copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\r\n  const systemStr = copied ? copiedText : copyText;\r\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\r\n  return /*#__PURE__*/React.createElement(Tooltip, {\r\n    key: \"copy\",\r\n    title: copyTitle\r\n  }, /*#__PURE__*/React.createElement(TransButton, {\r\n    className: classNames(`${prefixCls}-copy`, {\r\n      [`${prefixCls}-copy-success`]: copied,\r\n      [`${prefixCls}-copy-icon-only`]: iconOnly\r\n    }),\r\n    onClick: onCopy,\r\n    \"aria-label\": ariaLabel\r\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\r\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,EAAEC,MAAM,QAAQ,QAAQ;AACxC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrC,MAAM;IACJC,SAAS;IACTC,MAAM;IACNC,MAAM,GAAG,CAAC,CAAC;IACXC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAGP,KAAK;EACT,MAAMQ,YAAY,GAAGV,MAAM,CAACQ,QAAQ,CAAC;EACrC,MAAMG,SAAS,GAAGX,MAAM,CAACS,IAAI,CAAC;EAC9B,MAAM;IACJL,MAAM,EAAEQ,UAAU;IAClBC,IAAI,EAAEC;EACR,CAAC,GAAGT,MAAM;EACV,MAAMU,SAAS,GAAGX,MAAM,GAAGL,OAAO,CAACW,YAAY,CAAC,CAAC,CAAC,EAAEE,UAAU,CAAC,GAAGb,OAAO,CAACW,YAAY,CAAC,CAAC,CAAC,EAAEI,QAAQ,CAAC;EACpG,MAAME,SAAS,GAAGZ,MAAM,GAAGQ,UAAU,GAAGE,QAAQ;EAChD,MAAMG,SAAS,GAAG,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGC,SAAS;EACvE,OAAO,aAAavB,KAAK,CAACyB,aAAa,CAACpB,OAAO,EAAE;IAC/CqB,GAAG,EAAE,MAAM;IACXC,KAAK,EAAEL;EACT,CAAC,EAAE,aAAatB,KAAK,CAACyB,aAAa,CAACrB,WAAW,EAAE;IAC/CwB,SAAS,EAAEzB,UAAU,CAAE,GAAEO,SAAU,OAAM,EAAE;MACzC,CAAE,GAAEA,SAAU,eAAc,GAAGC,MAAM;MACrC,CAAE,GAAED,SAAU,iBAAgB,GAAGI;IACnC,CAAC,CAAC;IACFe,OAAO,EAAEhB,MAAM;IACf,YAAY,EAAEW;EAChB,CAAC,EAAEb,MAAM,GAAGL,OAAO,CAACY,SAAS,CAAC,CAAC,CAAC,EAAE,aAAalB,KAAK,CAACyB,aAAa,CAACxB,aAAa,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAGK,OAAO,CAACY,SAAS,CAAC,CAAC,CAAC,EAAE,aAAalB,KAAK,CAACyB,aAAa,CAACvB,YAAY,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACtL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}