{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\nimport { removeCSS, updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport * as React from 'react';\n// @ts-ignore\nimport unitless from '@emotion/unitless';\nimport { compile, serialize, stringify } from 'stylis';\nimport { contentQuotesLinter, hashedAnimationLinter } from \"../linters\";\nimport StyleContext, { ATTR_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { isClientSide, supportLayer, toStyleStr } from \"../util\";\nimport { CSS_FILE_STYLE, existPath, getStyleAndHash } from \"../util/cacheMapUtil\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar SKIP_CHECK = '_skip_check_';\nvar MULTI_VALUE = '_multi_value_';\n// ============================================================================\n// ==                                 Parser                                 ==\n// ============================================================================\n// Preprocessor style content to browser support one\nexport function normalizeStyle(styleStr) {\n  var serialized = serialize(compile(styleStr), stringify);\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\n}\nfunction isCompoundCSSProperty(value) {\n  return _typeof(value) === 'object' && value && (SKIP_CHECK in value || MULTI_VALUE in value);\n}\n\n// 注入 hash 值\nfunction injectSelectorHash(key, hashId, hashPriority) {\n  if (!hashId) {\n    return key;\n  }\n  var hashClassName = \".\".concat(hashId);\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName;\n\n  // 注入 hashId\n  var keys = key.split(',').map(function (k) {\n    var _firstPath$match;\n    var fullPath = k.trim().split(/\\s+/);\n\n    // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\n    var firstPath = fullPath[0] || '';\n    var htmlElement = ((_firstPath$match = firstPath.match(/^\\w+/)) === null || _firstPath$match === void 0 ? void 0 : _firstPath$match[0]) || '';\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\n  });\n  return keys.join(',');\n}\n// Parse CSSObject to style content\nexport var parseStyle = function parseStyle(interpolation) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      root: true,\n      parentSelectors: []\n    },\n    root = _ref.root,\n    injectHash = _ref.injectHash,\n    parentSelectors = _ref.parentSelectors;\n  var hashId = config.hashId,\n    layer = config.layer,\n    path = config.path,\n    hashPriority = config.hashPriority,\n    _config$transformers = config.transformers,\n    transformers = _config$transformers === void 0 ? [] : _config$transformers,\n    _config$linters = config.linters,\n    linters = _config$linters === void 0 ? [] : _config$linters;\n  var styleStr = '';\n  var effectStyle = {};\n  function parseKeyframes(keyframes) {\n    var animationName = keyframes.getName(hashId);\n    if (!effectStyle[animationName]) {\n      var _parseStyle = parseStyle(keyframes.style, config, {\n          root: false,\n          parentSelectors: parentSelectors\n        }),\n        _parseStyle2 = _slicedToArray(_parseStyle, 1),\n        _parsedStr = _parseStyle2[0];\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(_parsedStr);\n    }\n  }\n  function flattenList(list) {\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    list.forEach(function (item) {\n      if (Array.isArray(item)) {\n        flattenList(item, fullList);\n      } else if (item) {\n        fullList.push(item);\n      }\n    });\n    return fullList;\n  }\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\n  flattenStyleList.forEach(function (originStyle) {\n    // Only root level can use raw string\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\n    if (typeof style === 'string') {\n      styleStr += \"\".concat(style, \"\\n\");\n    } else if (style._keyframe) {\n      // Keyframe\n      parseKeyframes(style);\n    } else {\n      var mergedStyle = transformers.reduce(function (prev, trans) {\n        var _trans$visit;\n        return (trans === null || trans === void 0 || (_trans$visit = trans.visit) === null || _trans$visit === void 0 ? void 0 : _trans$visit.call(trans, prev)) || prev;\n      }, style);\n\n      // Normal CSSObject\n      Object.keys(mergedStyle).forEach(function (key) {\n        var value = mergedStyle[key];\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\n          var subInjectHash = false;\n\n          // 当成嵌套对象来处理\n          var mergedKey = key.trim();\n          // Whether treat child as root. In most case it is false.\n          var nextRoot = false;\n\n          // 拆分多个选择器\n          if ((root || injectHash) && hashId) {\n            if (mergedKey.startsWith('@')) {\n              // 略过媒体查询，交给子节点继续插入 hashId\n              subInjectHash = true;\n            } else {\n              // 注入 hashId\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\n            }\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\n            // But it does not conform to stylis syntax,\n            // and finally we will get `{color:red;}` as css, which is wrong.\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\n            mergedKey = '';\n            nextRoot = true;\n          }\n          var _parseStyle3 = parseStyle(value, config, {\n              root: nextRoot,\n              injectHash: subInjectHash,\n              parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\n            }),\n            _parseStyle4 = _slicedToArray(_parseStyle3, 2),\n            _parsedStr2 = _parseStyle4[0],\n            childEffectStyle = _parseStyle4[1];\n          effectStyle = _objectSpread(_objectSpread({}, effectStyle), childEffectStyle);\n          styleStr += \"\".concat(mergedKey).concat(_parsedStr2);\n        } else {\n          var _value;\n          function appendStyle(cssKey, cssValue) {\n            if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value !== null && value !== void 0 && value[SKIP_CHECK]))) {\n              [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\n                return linter(cssKey, cssValue, {\n                  path: path,\n                  hashId: hashId,\n                  parentSelectors: parentSelectors\n                });\n              });\n            }\n\n            // 如果是样式则直接插入\n            var styleName = cssKey.replace(/[A-Z]/g, function (match) {\n              return \"-\".concat(match.toLowerCase());\n            });\n\n            // Auto suffix with px\n            var formatValue = cssValue;\n            if (!unitless[cssKey] && typeof formatValue === 'number' && formatValue !== 0) {\n              formatValue = \"\".concat(formatValue, \"px\");\n            }\n\n            // handle animationName & Keyframe value\n            if (cssKey === 'animationName' && cssValue !== null && cssValue !== void 0 && cssValue._keyframe) {\n              parseKeyframes(cssValue);\n              formatValue = cssValue.getName(hashId);\n            }\n            styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\n          }\n          var actualValue = (_value = value === null || value === void 0 ? void 0 : value.value) !== null && _value !== void 0 ? _value : value;\n          if (_typeof(value) === 'object' && value !== null && value !== void 0 && value[MULTI_VALUE] && Array.isArray(actualValue)) {\n            actualValue.forEach(function (item) {\n              appendStyle(key, item);\n            });\n          } else {\n            appendStyle(key, actualValue);\n          }\n        }\n      });\n    }\n  });\n  if (!root) {\n    styleStr = \"{\".concat(styleStr, \"}\");\n  } else if (layer && supportLayer()) {\n    var layerCells = layer.split(',');\n    var layerName = layerCells[layerCells.length - 1].trim();\n    styleStr = \"@layer \".concat(layerName, \" {\").concat(styleStr, \"}\");\n\n    // Order of layer if needed\n    if (layerCells.length > 1) {\n      // zombieJ: stylis do not support layer order, so we need to handle it manually.\n      styleStr = \"@layer \".concat(layer, \"{%%%:%}\").concat(styleStr);\n    }\n  }\n  return [styleStr, effectStyle];\n};\n\n// ============================================================================\n// ==                                Register                                ==\n// ============================================================================\nexport function uniqueHash(path, styleStr) {\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\n}\nfunction Empty() {\n  return null;\n}\nexport var STYLE_PREFIX = 'style';\n/**\r\n * Register a style to the global style sheet.\r\n */\nexport default function useStyleRegister(info, styleFn) {\n  var token = info.token,\n    path = info.path,\n    hashId = info.hashId,\n    layer = info.layer,\n    nonce = info.nonce,\n    clientOnly = info.clientOnly,\n    _info$order = info.order,\n    order = _info$order === void 0 ? 0 : _info$order;\n  var _React$useContext = React.useContext(StyleContext),\n    autoClear = _React$useContext.autoClear,\n    mock = _React$useContext.mock,\n    defaultCache = _React$useContext.defaultCache,\n    hashPriority = _React$useContext.hashPriority,\n    container = _React$useContext.container,\n    ssrInline = _React$useContext.ssrInline,\n    transformers = _React$useContext.transformers,\n    linters = _React$useContext.linters,\n    cache = _React$useContext.cache;\n  var tokenKey = token._tokenKey;\n  var fullPath = [tokenKey].concat(_toConsumableArray(path));\n\n  // Check if need insert style\n  var isMergedClientSide = isClientSide;\n  if (process.env.NODE_ENV !== 'production' && mock !== undefined) {\n    isMergedClientSide = mock === 'client';\n  }\n  var _useGlobalCache = useGlobalCache(STYLE_PREFIX, fullPath,\n    // Create cache if needed\n    function () {\n      var cachePath = fullPath.join('|');\n\n      // Get style from SSR inline style directly\n      if (existPath(cachePath)) {\n        var _getStyleAndHash = getStyleAndHash(cachePath),\n          _getStyleAndHash2 = _slicedToArray(_getStyleAndHash, 2),\n          inlineCacheStyleStr = _getStyleAndHash2[0],\n          styleHash = _getStyleAndHash2[1];\n        if (inlineCacheStyleStr) {\n          return [inlineCacheStyleStr, tokenKey, styleHash, {}, clientOnly, order];\n        }\n      }\n\n      // Generate style\n      var styleObj = styleFn();\n      var _parseStyle5 = parseStyle(styleObj, {\n          hashId: hashId,\n          hashPriority: hashPriority,\n          layer: layer,\n          path: path.join('-'),\n          transformers: transformers,\n          linters: linters\n        }),\n        _parseStyle6 = _slicedToArray(_parseStyle5, 2),\n        parsedStyle = _parseStyle6[0],\n        effectStyle = _parseStyle6[1];\n      var styleStr = normalizeStyle(parsedStyle);\n      var styleId = uniqueHash(fullPath, styleStr);\n      return [styleStr, tokenKey, styleId, effectStyle, clientOnly, order];\n    },\n    // Remove cache if no need\n    function (_ref2, fromHMR) {\n      var _ref3 = _slicedToArray(_ref2, 3),\n        styleId = _ref3[2];\n      if ((fromHMR || autoClear) && isClientSide) {\n        removeCSS(styleId, {\n          mark: ATTR_MARK\n        });\n      }\n    },\n    // Effect: Inject style here\n    function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 4),\n        styleStr = _ref5[0],\n        _ = _ref5[1],\n        styleId = _ref5[2],\n        effectStyle = _ref5[3];\n      if (isMergedClientSide && styleStr !== CSS_FILE_STYLE) {\n        var mergedCSSConfig = {\n          mark: ATTR_MARK,\n          prepend: 'queue',\n          attachTo: container,\n          priority: order\n        };\n        var nonceStr = typeof nonce === 'function' ? nonce() : nonce;\n        if (nonceStr) {\n          mergedCSSConfig.csp = {\n            nonce: nonceStr\n          };\n        }\n        var style = updateCSS(styleStr, styleId, mergedCSSConfig);\n        style[CSS_IN_JS_INSTANCE] = cache.instanceId;\n\n        // Used for `useCacheToken` to remove on batch when token removed\n        style.setAttribute(ATTR_TOKEN, tokenKey);\n\n        // Debug usage. Dev only\n        if (process.env.NODE_ENV !== 'production') {\n          style.setAttribute(ATTR_CACHE_PATH, fullPath.join('|'));\n        }\n\n        // Inject client side effect style\n        Object.keys(effectStyle).forEach(function (effectKey) {\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), mergedCSSConfig);\n        });\n      }\n    }),\n    _useGlobalCache2 = _slicedToArray(_useGlobalCache, 3),\n    cachedStyleStr = _useGlobalCache2[0],\n    cachedTokenKey = _useGlobalCache2[1],\n    cachedStyleId = _useGlobalCache2[2];\n  return function (node) {\n    var styleNode;\n    if (!ssrInline || isMergedClientSide || !defaultCache) {\n      styleNode = /*#__PURE__*/React.createElement(Empty, null);\n    } else {\n      var _ref6;\n      styleNode = /*#__PURE__*/React.createElement(\"style\", _extends({}, (_ref6 = {}, _defineProperty(_ref6, ATTR_TOKEN, cachedTokenKey), _defineProperty(_ref6, ATTR_MARK, cachedStyleId), _ref6), {\n        dangerouslySetInnerHTML: {\n          __html: cachedStyleStr\n        }\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, styleNode, node);\n  };\n}\nexport var extract = function extract(cache, effectStyles, options) {\n  var _cache = _slicedToArray(cache, 6),\n    styleStr = _cache[0],\n    tokenKey = _cache[1],\n    styleId = _cache[2],\n    effectStyle = _cache[3],\n    clientOnly = _cache[4],\n    order = _cache[5];\n  var _ref7 = options || {},\n    plain = _ref7.plain;\n\n  // Skip client only style\n  if (clientOnly) {\n    return null;\n  }\n  var keyStyleText = styleStr;\n\n  // ====================== Style ======================\n  // Used for rc-util\n  var sharedAttrs = {\n    'data-rc-order': 'prependQueue',\n    'data-rc-priority': \"\".concat(order)\n  };\n  keyStyleText = toStyleStr(styleStr, tokenKey, styleId, sharedAttrs, plain);\n\n  // =============== Create effect style ===============\n  if (effectStyle) {\n    Object.keys(effectStyle).forEach(function (effectKey) {\n      // Effect style can be reused\n      if (!effectStyles[effectKey]) {\n        effectStyles[effectKey] = true;\n        var effectStyleStr = normalizeStyle(effectStyle[effectKey]);\n        keyStyleText += toStyleStr(effectStyleStr, tokenKey, \"_effect-\".concat(effectKey), sharedAttrs, plain);\n      }\n    });\n  }\n  return [order, styleId, keyStyleText];\n};","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_slicedToArray","_toConsumableArray","_typeof","hash","removeCSS","updateCSS","React","unitless","compile","serialize","stringify","contentQuotesLinter","hashedAnimationLinter","StyleContext","ATTR_CACHE_PATH","ATTR_MARK","ATTR_TOKEN","CSS_IN_JS_INSTANCE","isClientSide","supportLayer","toStyleStr","CSS_FILE_STYLE","existPath","getStyleAndHash","useGlobalCache","SKIP_CHECK","MULTI_VALUE","normalizeStyle","styleStr","serialized","replace","isCompoundCSSProperty","value","injectSelectorHash","key","hashId","hashPriority","hashClassName","concat","hashSelector","keys","split","map","k","_firstPath$match","fullPath","trim","firstPath","htmlElement","match","slice","length","join","parseStyle","interpolation","config","arguments","undefined","_ref","root","parentSelectors","injectHash","layer","path","_config$transformers","transformers","_config$linters","linters","effectStyle","parseKeyframes","keyframes","animationName","getName","_parseStyle","style","_parseStyle2","_parsedStr","flattenList","list","fullList","forEach","item","Array","isArray","push","flattenStyleList","originStyle","_keyframe","mergedStyle","reduce","prev","trans","_trans$visit","visit","call","Object","subInjectHash","mergedKey","nextRoot","startsWith","_parseStyle3","_parseStyle4","_parsedStr2","childEffectStyle","_value","appendStyle","cssKey","cssValue","process","env","NODE_ENV","linter","styleName","toLowerCase","formatValue","actualValue","layerCells","layerName","uniqueHash","Empty","STYLE_PREFIX","useStyleRegister","info","styleFn","token","nonce","clientOnly","_info$order","order","_React$useContext","useContext","autoClear","mock","defaultCache","container","ssrInline","cache","tokenKey","_tokenKey","isMergedClientSide","_useGlobalCache","cachePath","_getStyleAndHash","_getStyleAndHash2","inlineCacheStyleStr","styleHash","styleObj","_parseStyle5","_parseStyle6","parsedStyle","styleId","_ref2","fromHMR","_ref3","mark","_ref4","_ref5","_","mergedCSSConfig","prepend","attachTo","priority","nonceStr","csp","instanceId","setAttribute","effectKey","_useGlobalCache2","cachedStyleStr","cachedTokenKey","cachedStyleId","node","styleNode","createElement","_ref6","dangerouslySetInnerHTML","__html","Fragment","extract","effectStyles","options","_cache","_ref7","plain","keyStyleText","sharedAttrs","effectStyleStr"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/node_modules/@ant-design/cssinjs/es/hooks/useStyleRegister.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport hash from '@emotion/hash';\r\nimport { removeCSS, updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\r\nimport * as React from 'react';\r\n// @ts-ignore\r\nimport unitless from '@emotion/unitless';\r\nimport { compile, serialize, stringify } from 'stylis';\r\nimport { contentQuotesLinter, hashedAnimationLinter } from \"../linters\";\r\nimport StyleContext, { ATTR_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\r\nimport { isClientSide, supportLayer, toStyleStr } from \"../util\";\r\nimport { CSS_FILE_STYLE, existPath, getStyleAndHash } from \"../util/cacheMapUtil\";\r\nimport useGlobalCache from \"./useGlobalCache\";\r\nvar SKIP_CHECK = '_skip_check_';\r\nvar MULTI_VALUE = '_multi_value_';\r\n// ============================================================================\r\n// ==                                 Parser                                 ==\r\n// ============================================================================\r\n// Preprocessor style content to browser support one\r\nexport function normalizeStyle(styleStr) {\r\n  var serialized = serialize(compile(styleStr), stringify);\r\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\r\n}\r\nfunction isCompoundCSSProperty(value) {\r\n  return _typeof(value) === 'object' && value && (SKIP_CHECK in value || MULTI_VALUE in value);\r\n}\r\n\r\n// 注入 hash 值\r\nfunction injectSelectorHash(key, hashId, hashPriority) {\r\n  if (!hashId) {\r\n    return key;\r\n  }\r\n  var hashClassName = \".\".concat(hashId);\r\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName;\r\n\r\n  // 注入 hashId\r\n  var keys = key.split(',').map(function (k) {\r\n    var _firstPath$match;\r\n    var fullPath = k.trim().split(/\\s+/);\r\n\r\n    // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\r\n    var firstPath = fullPath[0] || '';\r\n    var htmlElement = ((_firstPath$match = firstPath.match(/^\\w+/)) === null || _firstPath$match === void 0 ? void 0 : _firstPath$match[0]) || '';\r\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\r\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\r\n  });\r\n  return keys.join(',');\r\n}\r\n// Parse CSSObject to style content\r\nexport var parseStyle = function parseStyle(interpolation) {\r\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\r\n      root: true,\r\n      parentSelectors: []\r\n    },\r\n    root = _ref.root,\r\n    injectHash = _ref.injectHash,\r\n    parentSelectors = _ref.parentSelectors;\r\n  var hashId = config.hashId,\r\n    layer = config.layer,\r\n    path = config.path,\r\n    hashPriority = config.hashPriority,\r\n    _config$transformers = config.transformers,\r\n    transformers = _config$transformers === void 0 ? [] : _config$transformers,\r\n    _config$linters = config.linters,\r\n    linters = _config$linters === void 0 ? [] : _config$linters;\r\n  var styleStr = '';\r\n  var effectStyle = {};\r\n  function parseKeyframes(keyframes) {\r\n    var animationName = keyframes.getName(hashId);\r\n    if (!effectStyle[animationName]) {\r\n      var _parseStyle = parseStyle(keyframes.style, config, {\r\n          root: false,\r\n          parentSelectors: parentSelectors\r\n        }),\r\n        _parseStyle2 = _slicedToArray(_parseStyle, 1),\r\n        _parsedStr = _parseStyle2[0];\r\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(_parsedStr);\r\n    }\r\n  }\r\n  function flattenList(list) {\r\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    list.forEach(function (item) {\r\n      if (Array.isArray(item)) {\r\n        flattenList(item, fullList);\r\n      } else if (item) {\r\n        fullList.push(item);\r\n      }\r\n    });\r\n    return fullList;\r\n  }\r\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\r\n  flattenStyleList.forEach(function (originStyle) {\r\n    // Only root level can use raw string\r\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\r\n    if (typeof style === 'string') {\r\n      styleStr += \"\".concat(style, \"\\n\");\r\n    } else if (style._keyframe) {\r\n      // Keyframe\r\n      parseKeyframes(style);\r\n    } else {\r\n      var mergedStyle = transformers.reduce(function (prev, trans) {\r\n        var _trans$visit;\r\n        return (trans === null || trans === void 0 || (_trans$visit = trans.visit) === null || _trans$visit === void 0 ? void 0 : _trans$visit.call(trans, prev)) || prev;\r\n      }, style);\r\n\r\n      // Normal CSSObject\r\n      Object.keys(mergedStyle).forEach(function (key) {\r\n        var value = mergedStyle[key];\r\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\r\n          var subInjectHash = false;\r\n\r\n          // 当成嵌套对象来处理\r\n          var mergedKey = key.trim();\r\n          // Whether treat child as root. In most case it is false.\r\n          var nextRoot = false;\r\n\r\n          // 拆分多个选择器\r\n          if ((root || injectHash) && hashId) {\r\n            if (mergedKey.startsWith('@')) {\r\n              // 略过媒体查询，交给子节点继续插入 hashId\r\n              subInjectHash = true;\r\n            } else {\r\n              // 注入 hashId\r\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\r\n            }\r\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\r\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\r\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\r\n            // But it does not conform to stylis syntax,\r\n            // and finally we will get `{color:red;}` as css, which is wrong.\r\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\r\n            mergedKey = '';\r\n            nextRoot = true;\r\n          }\r\n          var _parseStyle3 = parseStyle(value, config, {\r\n              root: nextRoot,\r\n              injectHash: subInjectHash,\r\n              parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\r\n            }),\r\n            _parseStyle4 = _slicedToArray(_parseStyle3, 2),\r\n            _parsedStr2 = _parseStyle4[0],\r\n            childEffectStyle = _parseStyle4[1];\r\n          effectStyle = _objectSpread(_objectSpread({}, effectStyle), childEffectStyle);\r\n          styleStr += \"\".concat(mergedKey).concat(_parsedStr2);\r\n        } else {\r\n          var _value;\r\n          function appendStyle(cssKey, cssValue) {\r\n            if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value !== null && value !== void 0 && value[SKIP_CHECK]))) {\r\n              [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\r\n                return linter(cssKey, cssValue, {\r\n                  path: path,\r\n                  hashId: hashId,\r\n                  parentSelectors: parentSelectors\r\n                });\r\n              });\r\n            }\r\n\r\n            // 如果是样式则直接插入\r\n            var styleName = cssKey.replace(/[A-Z]/g, function (match) {\r\n              return \"-\".concat(match.toLowerCase());\r\n            });\r\n\r\n            // Auto suffix with px\r\n            var formatValue = cssValue;\r\n            if (!unitless[cssKey] && typeof formatValue === 'number' && formatValue !== 0) {\r\n              formatValue = \"\".concat(formatValue, \"px\");\r\n            }\r\n\r\n            // handle animationName & Keyframe value\r\n            if (cssKey === 'animationName' && cssValue !== null && cssValue !== void 0 && cssValue._keyframe) {\r\n              parseKeyframes(cssValue);\r\n              formatValue = cssValue.getName(hashId);\r\n            }\r\n            styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\r\n          }\r\n          var actualValue = (_value = value === null || value === void 0 ? void 0 : value.value) !== null && _value !== void 0 ? _value : value;\r\n          if (_typeof(value) === 'object' && value !== null && value !== void 0 && value[MULTI_VALUE] && Array.isArray(actualValue)) {\r\n            actualValue.forEach(function (item) {\r\n              appendStyle(key, item);\r\n            });\r\n          } else {\r\n            appendStyle(key, actualValue);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  if (!root) {\r\n    styleStr = \"{\".concat(styleStr, \"}\");\r\n  } else if (layer && supportLayer()) {\r\n    var layerCells = layer.split(',');\r\n    var layerName = layerCells[layerCells.length - 1].trim();\r\n    styleStr = \"@layer \".concat(layerName, \" {\").concat(styleStr, \"}\");\r\n\r\n    // Order of layer if needed\r\n    if (layerCells.length > 1) {\r\n      // zombieJ: stylis do not support layer order, so we need to handle it manually.\r\n      styleStr = \"@layer \".concat(layer, \"{%%%:%}\").concat(styleStr);\r\n    }\r\n  }\r\n  return [styleStr, effectStyle];\r\n};\r\n\r\n// ============================================================================\r\n// ==                                Register                                ==\r\n// ============================================================================\r\nexport function uniqueHash(path, styleStr) {\r\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\r\n}\r\nfunction Empty() {\r\n  return null;\r\n}\r\nexport var STYLE_PREFIX = 'style';\r\n/**\r\n * Register a style to the global style sheet.\r\n */\r\nexport default function useStyleRegister(info, styleFn) {\r\n  var token = info.token,\r\n    path = info.path,\r\n    hashId = info.hashId,\r\n    layer = info.layer,\r\n    nonce = info.nonce,\r\n    clientOnly = info.clientOnly,\r\n    _info$order = info.order,\r\n    order = _info$order === void 0 ? 0 : _info$order;\r\n  var _React$useContext = React.useContext(StyleContext),\r\n    autoClear = _React$useContext.autoClear,\r\n    mock = _React$useContext.mock,\r\n    defaultCache = _React$useContext.defaultCache,\r\n    hashPriority = _React$useContext.hashPriority,\r\n    container = _React$useContext.container,\r\n    ssrInline = _React$useContext.ssrInline,\r\n    transformers = _React$useContext.transformers,\r\n    linters = _React$useContext.linters,\r\n    cache = _React$useContext.cache;\r\n  var tokenKey = token._tokenKey;\r\n  var fullPath = [tokenKey].concat(_toConsumableArray(path));\r\n\r\n  // Check if need insert style\r\n  var isMergedClientSide = isClientSide;\r\n  if (process.env.NODE_ENV !== 'production' && mock !== undefined) {\r\n    isMergedClientSide = mock === 'client';\r\n  }\r\n  var _useGlobalCache = useGlobalCache(STYLE_PREFIX, fullPath,\r\n    // Create cache if needed\r\n    function () {\r\n      var cachePath = fullPath.join('|');\r\n\r\n      // Get style from SSR inline style directly\r\n      if (existPath(cachePath)) {\r\n        var _getStyleAndHash = getStyleAndHash(cachePath),\r\n          _getStyleAndHash2 = _slicedToArray(_getStyleAndHash, 2),\r\n          inlineCacheStyleStr = _getStyleAndHash2[0],\r\n          styleHash = _getStyleAndHash2[1];\r\n        if (inlineCacheStyleStr) {\r\n          return [inlineCacheStyleStr, tokenKey, styleHash, {}, clientOnly, order];\r\n        }\r\n      }\r\n\r\n      // Generate style\r\n      var styleObj = styleFn();\r\n      var _parseStyle5 = parseStyle(styleObj, {\r\n          hashId: hashId,\r\n          hashPriority: hashPriority,\r\n          layer: layer,\r\n          path: path.join('-'),\r\n          transformers: transformers,\r\n          linters: linters\r\n        }),\r\n        _parseStyle6 = _slicedToArray(_parseStyle5, 2),\r\n        parsedStyle = _parseStyle6[0],\r\n        effectStyle = _parseStyle6[1];\r\n      var styleStr = normalizeStyle(parsedStyle);\r\n      var styleId = uniqueHash(fullPath, styleStr);\r\n      return [styleStr, tokenKey, styleId, effectStyle, clientOnly, order];\r\n    },\r\n    // Remove cache if no need\r\n    function (_ref2, fromHMR) {\r\n      var _ref3 = _slicedToArray(_ref2, 3),\r\n        styleId = _ref3[2];\r\n      if ((fromHMR || autoClear) && isClientSide) {\r\n        removeCSS(styleId, {\r\n          mark: ATTR_MARK\r\n        });\r\n      }\r\n    },\r\n    // Effect: Inject style here\r\n    function (_ref4) {\r\n      var _ref5 = _slicedToArray(_ref4, 4),\r\n        styleStr = _ref5[0],\r\n        _ = _ref5[1],\r\n        styleId = _ref5[2],\r\n        effectStyle = _ref5[3];\r\n      if (isMergedClientSide && styleStr !== CSS_FILE_STYLE) {\r\n        var mergedCSSConfig = {\r\n          mark: ATTR_MARK,\r\n          prepend: 'queue',\r\n          attachTo: container,\r\n          priority: order\r\n        };\r\n        var nonceStr = typeof nonce === 'function' ? nonce() : nonce;\r\n        if (nonceStr) {\r\n          mergedCSSConfig.csp = {\r\n            nonce: nonceStr\r\n          };\r\n        }\r\n        var style = updateCSS(styleStr, styleId, mergedCSSConfig);\r\n        style[CSS_IN_JS_INSTANCE] = cache.instanceId;\r\n\r\n        // Used for `useCacheToken` to remove on batch when token removed\r\n        style.setAttribute(ATTR_TOKEN, tokenKey);\r\n\r\n        // Debug usage. Dev only\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          style.setAttribute(ATTR_CACHE_PATH, fullPath.join('|'));\r\n        }\r\n\r\n        // Inject client side effect style\r\n        Object.keys(effectStyle).forEach(function (effectKey) {\r\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), mergedCSSConfig);\r\n        });\r\n      }\r\n    }),\r\n    _useGlobalCache2 = _slicedToArray(_useGlobalCache, 3),\r\n    cachedStyleStr = _useGlobalCache2[0],\r\n    cachedTokenKey = _useGlobalCache2[1],\r\n    cachedStyleId = _useGlobalCache2[2];\r\n  return function (node) {\r\n    var styleNode;\r\n    if (!ssrInline || isMergedClientSide || !defaultCache) {\r\n      styleNode = /*#__PURE__*/React.createElement(Empty, null);\r\n    } else {\r\n      var _ref6;\r\n      styleNode = /*#__PURE__*/React.createElement(\"style\", _extends({}, (_ref6 = {}, _defineProperty(_ref6, ATTR_TOKEN, cachedTokenKey), _defineProperty(_ref6, ATTR_MARK, cachedStyleId), _ref6), {\r\n        dangerouslySetInnerHTML: {\r\n          __html: cachedStyleStr\r\n        }\r\n      }));\r\n    }\r\n    return /*#__PURE__*/React.createElement(React.Fragment, null, styleNode, node);\r\n  };\r\n}\r\nexport var extract = function extract(cache, effectStyles, options) {\r\n  var _cache = _slicedToArray(cache, 6),\r\n    styleStr = _cache[0],\r\n    tokenKey = _cache[1],\r\n    styleId = _cache[2],\r\n    effectStyle = _cache[3],\r\n    clientOnly = _cache[4],\r\n    order = _cache[5];\r\n  var _ref7 = options || {},\r\n    plain = _ref7.plain;\r\n\r\n  // Skip client only style\r\n  if (clientOnly) {\r\n    return null;\r\n  }\r\n  var keyStyleText = styleStr;\r\n\r\n  // ====================== Style ======================\r\n  // Used for rc-util\r\n  var sharedAttrs = {\r\n    'data-rc-order': 'prependQueue',\r\n    'data-rc-priority': \"\".concat(order)\r\n  };\r\n  keyStyleText = toStyleStr(styleStr, tokenKey, styleId, sharedAttrs, plain);\r\n\r\n  // =============== Create effect style ===============\r\n  if (effectStyle) {\r\n    Object.keys(effectStyle).forEach(function (effectKey) {\r\n      // Effect style can be reused\r\n      if (!effectStyles[effectKey]) {\r\n        effectStyles[effectKey] = true;\r\n        var effectStyleStr = normalizeStyle(effectStyle[effectKey]);\r\n        keyStyleText += toStyleStr(effectStyleStr, tokenKey, \"_effect-\".concat(effectKey), sharedAttrs, plain);\r\n      }\r\n    });\r\n  }\r\n  return [order, styleId, keyStyleText];\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}