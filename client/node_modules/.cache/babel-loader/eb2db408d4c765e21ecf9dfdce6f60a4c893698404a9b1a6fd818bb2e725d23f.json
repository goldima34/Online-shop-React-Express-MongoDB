{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golov\\\\coding\\\\git_repo_practice\\\\react-node-app-5\\\\client\\\\src\\\\components\\\\micro\\\\NovaPoshta.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NovaPoshta = ({\n  loading,\n  onCityChange,\n  onWarehouseChange\n}) => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [selectedCity, setSelectedCity] = useState();\n  const [searchCityString, setSearchCityString] = useState(\"\");\n  const [warehouses, setWarehouses] = useState([]);\n  useEffect(() => {\n    NewPostGetCity(searchCityString).then(data => setRegions(data));\n  }, [searchCityString]);\n  const getWarehouse = selectedCity => {\n    NewPostGetWarehouses(selectedCity).then(data => setWarehouses(data));\n  };\n  const handleCityChange = value => {\n    setSelectedCity(value);\n    onCityChange(value); // Передаем выбранный город в родительский компонент\n    getWarehouse(value);\n  };\n  const handleWarehouseChange = value => {\n    onWarehouseChange(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      mode: \"single\",\n      value: selectedCity,\n      placeholder: \"\\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043C\\u0456\\u0441\\u0442\\u043E\",\n      showSearch: true,\n      onChange: handleCityChange,\n      onSearch: value => setSearchCityString(value),\n      loading: loading,\n      filterOption: false,\n      notFoundContent: loading ? \"Loading...\" : \"No data found\",\n      children: regions.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: item.Description,\n        children: item.Description\n      }, item.Ref, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"single\",\n      placeholder: \"\\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0432\\u0456\\u0434\\u0434\\u0456\\u043B\\u0435\\u043D\\u043D\\u044F\",\n      value: selectedWarehouses,\n      showSearch: true,\n      onChange: handleWarehouseChange,\n      style: {\n        width: 400\n      },\n      loading: loading,\n      filterOption: false,\n      notFoundContent: loading ? \"Loading...\" : \"No data found\",\n      children: warehouses.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n        style: {\n          fontSize: \"12px\"\n        },\n        value: item.Description,\n        children: item.Description\n      }, item.Ref, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NovaPoshta, \"GV/2p0Kh+SuYTMyFgORLHy5M7Ys=\");\n_c = NovaPoshta;\nvar _c;\n$RefreshReg$(_c, \"NovaPoshta\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","NovaPoshta","loading","onCityChange","onWarehouseChange","_s","regions","setRegions","useState","selectedCity","setSelectedCity","searchCityString","setSearchCityString","warehouses","setWarehouses","useEffect","NewPostGetCity","then","data","getWarehouse","NewPostGetWarehouses","handleCityChange","value","handleWarehouseChange","children","Select","mode","placeholder","showSearch","onChange","onSearch","filterOption","notFoundContent","map","item","Option","Description","Ref","fileName","_jsxFileName","lineNumber","columnNumber","selectedWarehouses","style","width","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-5/client/src/components/micro/NovaPoshta.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const NovaPoshta = ({ loading, onCityChange, onWarehouseChange }) => {\r\n  const [regions, setRegions] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState();\r\n  const [searchCityString, setSearchCityString] = useState(\"\");\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  useEffect(() => {\r\n    NewPostGetCity(searchCityString).then((data) => setRegions(data));\r\n  }, [searchCityString]);\r\n\r\n  const getWarehouse = (selectedCity) => {\r\n    NewPostGetWarehouses(selectedCity).then((data) => setWarehouses(data));\r\n  };\r\n\r\n  const handleCityChange = (value) => {\r\n    setSelectedCity(value);\r\n    onCityChange(value); // Передаем выбранный город в родительский компонент\r\n    getWarehouse(value);\r\n  };\r\n\r\n  const handleWarehouseChange = (value) => {\r\n    onWarehouseChange(value);\r\n  };\r\n  return (\r\n    <>\r\n      <Select\r\n        mode=\"single\"\r\n        value={selectedCity}\r\n        placeholder=\"Виберіть місто\"\r\n        showSearch={true}\r\n        onChange={handleCityChange}\r\n        onSearch={(value) => setSearchCityString(value)}\r\n        loading={loading}\r\n        filterOption={false}\r\n        notFoundContent={loading ? \"Loading...\" : \"No data found\"}\r\n      >\r\n        {regions.map((item) => (\r\n          <Select.Option key={item.Ref} value={item.Description}>\r\n            {item.Description}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n      <Select\r\n        mode=\"single\"\r\n        placeholder=\"Виберіть відділення\"\r\n        value={selectedWarehouses}\r\n        showSearch={true}\r\n        onChange={handleWarehouseChange}\r\n        style={{ width: 400 }}\r\n        loading={loading}\r\n        filterOption={false}\r\n        notFoundContent={loading ? \"Loading...\" : \"No data found\"}\r\n      >\r\n        {warehouses.map((item) => (\r\n          <Select.Option\r\n            style={{ fontSize: \"12px\" }}\r\n            key={item.Ref}\r\n            value={item.Description}\r\n          >\r\n            {item.Description}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}