{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","map":{"version":3,"names":["unit","resetComponent","genStyleHooks","mergeToken","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","Object","assign","borderBlockStart","position","top","display","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","margin","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","prepareComponentToken","marginXS","dividerToken","marginLG","unitless"],"sources":["C:/Users/Admin/git/react-node-app/client/node_modules/antd/es/divider/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\r\nimport { resetComponent } from '../../style';\r\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\r\n// ============================== Shared ==============================\r\nconst genSharedDividerStyle = token => {\r\n  const {\r\n    componentCls,\r\n    sizePaddingEdgeHorizontal,\r\n    colorSplit,\r\n    lineWidth,\r\n    textPaddingInline,\r\n    orientationMargin,\r\n    verticalMarginInline\r\n  } = token;\r\n  return {\r\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\r\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\r\n      // vertical\r\n      '&-vertical': {\r\n        position: 'relative',\r\n        top: '-0.06em',\r\n        display: 'inline-block',\r\n        height: '0.9em',\r\n        marginInline: verticalMarginInline,\r\n        marginBlock: 0,\r\n        verticalAlign: 'middle',\r\n        borderTop: 0,\r\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\r\n      },\r\n      '&-horizontal': {\r\n        display: 'flex',\r\n        clear: 'both',\r\n        width: '100%',\r\n        minWidth: '100%',\r\n        // Fix https://github.com/ant-design/ant-design/issues/10914\r\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\r\n      },\r\n      [`&-horizontal${componentCls}-with-text`]: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\r\n        color: token.colorTextHeading,\r\n        fontWeight: 500,\r\n        fontSize: token.fontSizeLG,\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'center',\r\n        borderBlockStart: `0 ${colorSplit}`,\r\n        '&::before, &::after': {\r\n          position: 'relative',\r\n          width: '50%',\r\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\r\n          // Chrome not accept `inherit` in `border-top`\r\n          borderBlockStartColor: 'inherit',\r\n          borderBlockEnd: 0,\r\n          transform: 'translateY(50%)',\r\n          content: \"''\"\r\n        }\r\n      },\r\n      [`&-horizontal${componentCls}-with-text-left`]: {\r\n        '&::before': {\r\n          width: `calc(${orientationMargin} * 100%)`\r\n        },\r\n        '&::after': {\r\n          width: `calc(100% - ${orientationMargin} * 100%)`\r\n        }\r\n      },\r\n      [`&-horizontal${componentCls}-with-text-right`]: {\r\n        '&::before': {\r\n          width: `calc(100% - ${orientationMargin} * 100%)`\r\n        },\r\n        '&::after': {\r\n          width: `calc(${orientationMargin} * 100%)`\r\n        }\r\n      },\r\n      [`${componentCls}-inner-text`]: {\r\n        display: 'inline-block',\r\n        paddingBlock: 0,\r\n        paddingInline: textPaddingInline\r\n      },\r\n      '&-dashed': {\r\n        background: 'none',\r\n        borderColor: colorSplit,\r\n        borderStyle: 'dashed',\r\n        borderWidth: `${unit(lineWidth)} 0 0`\r\n      },\r\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\r\n        '&::before, &::after': {\r\n          borderStyle: 'dashed none none'\r\n        }\r\n      },\r\n      [`&-vertical${componentCls}-dashed`]: {\r\n        borderInlineStartWidth: lineWidth,\r\n        borderInlineEnd: 0,\r\n        borderBlockStart: 0,\r\n        borderBlockEnd: 0\r\n      },\r\n      [`&-plain${componentCls}-with-text`]: {\r\n        color: token.colorText,\r\n        fontWeight: 'normal',\r\n        fontSize: token.fontSize\r\n      },\r\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\r\n        '&::before': {\r\n          width: 0\r\n        },\r\n        '&::after': {\r\n          width: '100%'\r\n        },\r\n        [`${componentCls}-inner-text`]: {\r\n          paddingInlineStart: sizePaddingEdgeHorizontal\r\n        }\r\n      },\r\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\r\n        '&::before': {\r\n          width: '100%'\r\n        },\r\n        '&::after': {\r\n          width: 0\r\n        },\r\n        [`${componentCls}-inner-text`]: {\r\n          paddingInlineEnd: sizePaddingEdgeHorizontal\r\n        }\r\n      }\r\n    })\r\n  };\r\n};\r\nexport const prepareComponentToken = token => ({\r\n  textPaddingInline: '1em',\r\n  orientationMargin: 0.05,\r\n  verticalMarginInline: token.marginXS\r\n});\r\n// ============================== Export ==============================\r\nexport default genStyleHooks('Divider', token => {\r\n  const dividerToken = mergeToken(token, {\r\n    dividerHorizontalWithTextGutterMargin: token.margin,\r\n    dividerHorizontalGutterMargin: token.marginLG,\r\n    sizePaddingEdgeHorizontal: 0\r\n  });\r\n  return [genSharedDividerStyle(dividerToken)];\r\n}, prepareComponentToken, {\r\n  unitless: {\r\n    orientationMargin: true\r\n  }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}