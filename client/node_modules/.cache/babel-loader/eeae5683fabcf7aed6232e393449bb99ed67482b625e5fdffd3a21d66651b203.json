{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golov\\\\coding\\\\git_repo_practice\\\\react-node-app-7\\\\client\\\\src\\\\pages\\\\ItemsByCategory\\\\ItemsByCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LoadingScreen } from '../../components/micro/loadingScreen/loading.js';\nimport { fetchProductByCategory } from '../../api/ItemApi.js';\nimport { Context } from '../../index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemsByCategory = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n  const {\n    item\n  } = useContext(Context);\n  useEffect(() => {\n    const fetchData = () => {\n      fetchProductByCategory(category).then(data => setItems(data));\n    };\n    console.log(item);\n    fetchData();\n    setLoading(false);\n  }, [category, items]);\n  if (loading && items) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ItemsByCategory\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(ItemsByCategory, \"R8bfz0XhHBhNfhhztjT03hygYhY=\", false, function () {\n  return [useParams];\n});\n_c = ItemsByCategory;\nvar _c;\n$RefreshReg$(_c, \"ItemsByCategory\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","LoadingScreen","fetchProductByCategory","Context","jsxDEV","_jsxDEV","ItemsByCategory","_s","category","loading","setLoading","items","setItems","item","fetchData","then","data","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/golov/coding/git_repo_practice/react-node-app-7/client/src/pages/ItemsByCategory/ItemsByCategory.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { LoadingScreen } from '../../components/micro/loadingScreen/loading.js'\r\nimport { fetchProductByCategory } from '../../api/ItemApi.js'\r\nimport { Context } from '../../index.js'\r\n\r\nexport const ItemsByCategory = () => {\r\n  const { category } = useParams()\r\n  const [loading, setLoading] = useState(true)\r\n  const [items, setItems] = useState([])\r\n  const {item} = useContext(Context)\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      fetchProductByCategory(category).then((data) => setItems(data))\r\n    } \r\n    console.log(item)\r\n    fetchData()\r\n    setLoading(false)\r\n  }, [category, items])\r\n\r\n  if (loading && items) {\r\n    return <LoadingScreen />\r\n  }\r\n\r\n  return <div>ItemsByCategory</div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,iDAAiD;AAC/E,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,SAASC,OAAO,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;EAChC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAACc;EAAI,CAAC,GAAGhB,UAAU,CAACM,OAAO,CAAC;EAElCL,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGA,CAAA,KAAM;MACtBZ,sBAAsB,CAACM,QAAQ,CAAC,CAACO,IAAI,CAAEC,IAAI,IAAKJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACjE,CAAC;IACDC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBC,SAAS,CAAC,CAAC;IACXJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACF,QAAQ,EAAEG,KAAK,CAAC,CAAC;EAErB,IAAIF,OAAO,IAAIE,KAAK,EAAE;IACpB,oBAAON,OAAA,CAACJ,aAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1B;EAEA,oBAAOjB,OAAA;IAAAkB,QAAA,EAAK;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACnC,CAAC;AAAAf,EAAA,CApBYD,eAAe;EAAA,QACLN,SAAS;AAAA;AAAAwB,EAAA,GADnBlB,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}